version: '3.8'
services:
  master-db:
    extends:
      file: docker/mysql/docker-services.yaml
      service: master-db
    container_name: master-db
    ports:
      - "${MASTER_DB_PORT}:3306"
    networks:
      container_net:
        ipv4_address: ${SUBNET}.20
  redis:
    container_name: redis
    image: redis:6.2.5
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      container_net:
        ipv4_address: ${SUBNET}.30
  backend-app:
    environment:
      DATABASE_IP: ${SUBNET}.20
      REDIS_IP: ${SUBNET}.30
    extends:
      file: docker/django/docker-services.yaml
      service: backend-app
    container_name: backend-app
    depends_on:
      - master-db
      - redis
    ports:
      - "${DJANGO_HTTP_PORT}:80"
      - "${DJANGO_HTTPS_PORT}:443"
    networks:
      container_net:
        ipv4_address: ${SUBNET}.10
  api-app:
    environment:
      DATABASE_IP: ${SUBNET}.20
      REDIS_IP: ${SUBNET}.30
    extends:
      file: docker/fastapi/docker-services.yaml
      service: api-app
    container_name: api-app
    depends_on:
      - master-db
      - redis
    ports:
      - "${FAST_API_HTTP_PORT}:80"
      - "${FAST_API_HTTPS_PORT}:443"
    networks:
      container_net:
        ipv4_address: ${SUBNET}.11
  frontend-app:
    extends:
      file: docker/nextjs/docker-services.yaml
      service: frontend-app
    container_name: frontend-app
    ports:
      - "${NEXT_JS_HTTP_PORT}:80"
      - "${NEXT_JS_HTTPS_PORT}:443"
    networks:
      container_net:
        ipv4_address: ${SUBNET}.15
networks:
  container_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${SUBNET}.0/24
          gateway: ${SUBNET}.1